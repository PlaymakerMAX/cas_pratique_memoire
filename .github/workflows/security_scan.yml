name: Analyse de Sécurité Complète (SAST, SCA, DAST)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  sast-and-sca-scans:
    name: Scans Statiques (SAST & SCA)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Installation des dépendances
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install bandit pip-audit
      - name: Lancement du scan Bandit (SAST)
        run: bandit -r . -l low || true
      - name: Lancement du scan pip-audit (SCA)
        run: pip-audit -r requirements.txt || true

  dast-scan:
    name: Scan DAST avec OWASP ZAP
    runs-on: ubuntu-latest
    needs: sast-and-sca-scans
    steps:
      - name: Checkout du code
        uses: actions/checkout@v4

      - name: Installation de Python et des dépendances
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - run: pip install -r requirements.txt

      - name: Lancement des migrations Django
        run: python manage.py migrate

      - name: Lancement de l'application Django en arrière-plan
        run: |
          python manage.py runserver &
          sleep 15

      - name: Scan DAST avec ZAP Baseline
        uses: zaproxy/action-baseline@v0.12.0
        with:
          # On dit à ZAP de scanner, mais on ne lui demande plus de gérer l'artefact
          target: 'http://127.0.0.1:8000/'

      # NOUVELLE ETAPE : On utilise l'action officielle de GitHub pour uploader le rapport
      - name: Upload du rapport de scan ZAP
        if: always()
        uses: actions/upload-artifact@v4
        with:
          # Nom que portera l'artefact téléchargeable
          name: zap-scan-report
          # Chemin vers le fichier généré par ZAP que l'on veut uploader
          path: report_html.html
          